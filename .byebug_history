c!
block
&block
attributes
attributs
subclass.new(attributes, &block)
subclass.new(attributes,&block)
subclass
n
c
n
super
n
self
subclass !=self
subclass
subclasss
n
abstract_class
n
c
 User.new(user_params)
c
User.new(user_params)
@user
c!
C!
c!
c
c!
c
profile
params.require(:user).permit(:name, :birthdate, :email, :telefone, :profile, :preferred_class, :preferred_day)
c!
params.require(:user).permit(:name, :birthdate, :email, :telefone, :profile, :preferred_class, :preferred_day)
c
params.require(:user).permit(:name, :birthdate, :email, :telefone, :profile, :preferred_class, :preferred_day)
params.require(:user).permit(:name, :birthdate, :email, :telefone, :profile)
params.require(:user).permit(:name, :birthdate, :email, :telefone, profiles: [])
params
c
preferred_day
c
profile
preferred_class
profile
preferred_day
professor
preferred_day
c
profile
professor
email
name
preferred_day
c
user_params
n
User
@user
n
@users
c
preferred_class
c
n
profile
c
profile
c
profile
c
profile
c!
c
exit
exi
Schedule.schedule.destroy
schedule.destroy
schedule
date
exit
date
schedule = Schedule.where(stopover_day: date)
n
c!
date
exit
date
exit
schedule
c
n
schedule
date
schedule
schedulr
exit
n
c
exit
last_month
n
exit
n
total_days_in_next_month
n
next_month
n
exit
c!
exit
assistent
exit
assistent
teacher
n
c
exit
teacher
exit
teacher
n
c
n
 Schedule.where(teacher: teacher.name)
if Schedule.where(teacher: teacher.name).count <= 2
n
exit
 Schedule.where(teacher: teacher_name).count
 if Schedule.where(teacher: teacher_name).count <= 2
teacher
n
c
n
exit
n
c
n
c
n
teacher_count
n
teacher_count
c
n
exit
usuario
n
c
n
c!
c
n
c!
c
c!
c
n
c!
c
c!
c
first_sunday
n
date
n
c
date
n
c
date
n
date
c
date
n
date
c
n
date
n
date
day
first_sunday
c
n
first_sunday
first_day
n
c
exit
c
first_sunday
n
c!
c
date
users
c
users
c
users
c
users
c
c!
c
n
users.where(preferred_class: 'Babies')
users
exit
morning_users
c
n
exit
c
n
c
n
c
date
exit
c
date
c
teacher_pre1
teacher_pre1.name
teacher
c
teacher_babies.id
teacher_babies
c
v
n
c!
c
Schedule.create(teacher_name: teacher_pre2.name, teacher_id: teacher_pre2.id,assistent_name: assistent_pre2.name, assistent_id: assistent_pre2.id,leader_name: leader_morning.name, leader_id: leader_morning.id, assistent_leader: assistent_leader_morning.name, lesson_title: Lesson.last.title,lesson_id: Lesson.last.id, stopover_day: date)
Schedule.all
Schedule.create(teacher_name: teacher_pre2.name, teacher_id: teacher_pre2.id,assistent_name: assistent_pre2.name, assistent_id: assistent_pre2.id,leader_name: leader_morning.name, leader_id: leader_morning.id, assistent_leader: assistent_leader_morning.name, lesson_title: Lesson.last.title,lesson_id: Lesson.last.id, stopover_day: date)
                      lesson_id: Lesson.last.id, stopover_day: date)
                      assistent_leader: assistent_leader_morning.name, lesson_title: Lesson.last.title,
                      leader_name: leader_morning.name, leader_id: leader_morning.id,
                      assistent_name: assistent_pre2.name, assistent_id: assistent_pre2.id,
Schedule.create(teacher_name: teacher_pre2.name, teacher_id: teacher_pre2.id,
Schedule.all
c
n
exit
   46:                       assistent_leader: assistent_leader_morning, stopover_day: date)
Schedule.create(teacher_name: teacher_kids1.name, assistent_name: assistent_kids1, leader_name: leader_morning,
c
_assistent_babies
n
_teacher_babies
n
